train$plan <- as.character(train$planINT)
sum(train$planINT < 1E7)
train$plan[train$planINT < 1E7] <- paste("0",train$plan[train$planINT < 1E7],sep="")
train$plan <- as.factor(train$plan)
table(train$plan)
train$planINT <- 1e6*train$A + 1e5*train$B + 1e4*train$C + 1e3*train$D + 1e2*train$E + 1e1*train$F + train$G
train$plan <- as.character(train$planINT)
train$plan[train$planINT < 1E6] <- paste("0",train$plan[train$planINT < 1E6],sep="")
train$plan <- as.factor(train$plan)
table(train$plan)
table(train$A)
table(train$plan,train$A)
table(train$plan[train$A==0],train$A[train$A==0])
table$plan <- paste(paste(paste(paste(train$A, train$B, sep = ""), paste(train$C, train$D, sep = ""), sep = ""), paste(train$E, train$F, sep = ""), sep = ""), train$G, sep = "")
table$AB <- paste(train$A, train$B, sep = "")
train$planINT <- 1e6*train$A + 1e5*train$B + 10000*train$C + 1000*train$D + 100*train$E + 10*train$F + train$G
train$planINT <- 1e6*train$A + 1e5*train$B + 10000*train$C + 1000*train$D + 100*train$E + 10*train$F + train$G
?formatC
train$plan <- formatC(train$planINT, width = 7, flag = "0")
table(train$plan,train$A)
train$plan <- as.factor(formatC(train$planINT, width = 7, flag = "0"))
table(train$plan,train$A)
train$planINT <- 1e6*train$A + 1e5*train$B + 10000*train$C + 1000*train$D + 100*train$E + 10*train$F + train$G
train$plan <- as.factor(formatC(train$planINT, width = 7, flag = "0"))
table(train$plan,train$A)
train$planINT <- 1e7 + 1e6*train$A + 1e5*train$B + 10000*train$C + 1000*train$D + 100*train$E + 10*train$F + train$G
?%%
?%
?mod
?modulo
?modulus
13%%10
train$planINT <- 1e7 + 1e6*train$A + 1e5*train$B + 10000*train$C + 1000*train$D + 100*train$E + 10*train$F + train$G
train$plan <- as.factor(formatC(train$planINT %% 1e7, width = 7, flag = "0"))
table(train$plan,train$A)
train <- read.csv("~/GitHub/appc/train.csv")
str(train)
trainA <- train[,c(2:18,25)]
trainA$A <- as.factor(trainA$A)
table(trainA$A)
library("randomForest")
rfA <- randomForest(A ~ ., data = trainA[1:100,])
summary(train)
train$risk_factor[is.na(train$risk_factor)] <- 0
train$C_previous[is.na(train$C_previous)] <- 0
train$duration_previous[is.na(train$duration_previous)] <- 0
trainA <- train[,c(2:18,25)]
trainA$A <- as.factor(trainA$A)
table(trainA$A)
rfA <- randomForest(A ~ ., data = trainA[1:100,])
str(train)
table(train$state)
table(train$state)[order(table(train$state))]
table(train$state,train$A)
table(train$state,train$B)
table(train$state,train$C)
table(train$state,train$D)
table(train$state,train$E)
table(train$state,train$F)
table(train$state,train$G)
train$A <- as.factor(train$A)
train$B <- as.factor(train$B)
train$C <- as.factor(train$C)
train$D <- as.factor(train$D)
train$E <- as.factor(train$E)
train$F <- as.factor(train$F)
table(train$state,train$G)
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$G[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE"),na.rm=T],train$G[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$G)
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$G[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$A[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$B[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$C[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$D[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$E[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$F[train$state %in% c("SD", "ND", "WY", "NE")])
table(train$state[train$state %in% c("SD", "ND", "WY", "NE")],train$G[train$state %in% c("SD", "ND", "WY", "NE")])
colnames(train)[17]
colnames(train)[18]
rfA <- randomForest(A ~ ., data = train[1:100,2:17])
rfA <- randomForest(A ~ ., data = train[1:100,2:18])
colnames(train)[1:5]
str(train)
smallTrain <- train[train$state %in% c("SD", "ND", "WY", "NE"),]
smallTrain <- smallTrain[, -time]
smallTrain <- smallTrain[, -smallTrain$time]
smallTrain <- smallTrain[, -4]
str(smallTrain)
smallTrain <- droplevels(train[train$state %in% c("SD", "ND", "WY", "NE"),])
smallTrain <- smallTrain[, -4]
str(smallTrain)
rfA <- randomForest(A ~ ., data = train[1:100,2:18])
smallTrain <- droplevels(train[train$state %in% c("SD", "ND", "WY", "NE"),c(2,3,5:18,25)])
str(smallTrain)
smallTrain <- droplevels(train[train$state %in% c("SD", "ND", "WY", "NE"),c(2:4,5:18,25)])
str(smallTrain)
smallTrain <- droplevels(train[train$state %in% c("SD", "ND", "WY", "NE"),c(2:18,25)])
str(smallTrain)
smallTrain <- smallTrain[,-c(4,5)]
str(smallTrain)
rfA <- randomForest(A ~ ., data = train[1:100,2:18])
summary(smallTrain)
table(train$location)
table(smallTrain$state,smallTrain$location)
str(smallTrain)
smallTrain <- droplevels(train[train$state %in% c("SD", "ND", "WY", "NE"),c(2:18,25)])
smallTrain <- smallTrain[,-4]
str(smallTrain)
rfA <- randomForest(A ~ ., data = train[1:100,2:18])
table(smallTrain$shopping_pt)
table(smallTrain$record_type)
table(smallTrain$day)
length(smallTrain$location)
table(smallTrain$state,smallTrain$location)
table(smallTrain$location,smallTrain$state)
table(smallTrain$group_size)
table(smallTrain$car_age)
table(smallTrain$car_value)
table(smallTrain$risk_factor)
table(smallTrain$age_oldest)
table(smallTrain$age_youngest)
table(smallTrain$C_previous)
table(smallTrain$duration_previous)
table(smallTrain$cost)
colnames(train)
rfA <- randomForest(A ~ shopping_pt + record_type + day + state + group_size + homeowner + car_age + car_value + risk_factor + age_oldest + age_youngest + married_couple + C_previous + duration_previous + cost, data = smallTrain)
predA <- predict(rfA, data= smallTrain)
table(smallTrain$A,predA)
predA <- predict(rfA, data= train)
table(train$A,predA)
predA <- predict(rfA, newdata= train)
table(train$A,predA)
rfA <- randomForest(A ~ shopping_pt + record_type + day + group_size + homeowner + car_age + car_value + risk_factor + age_oldest + age_youngest + married_couple + C_previous + duration_previous + cost, data = smallTrain)
predA <- predict(rfA, newdata= train)
max(apply(table(train$location,train$state),1,sum))
table(train$location,train$state)
table(train$location[train$state=="sD"])
table(smallTrain$location)
table(smallTrain$locationsmallTrain$state)
table(smallTrain$location,smallTrain$state)
length(table(smallTrain$location))
table(train$state)
table(train$location[train$state %in% "NY"])
length(table(train$location[train$state %in% "NY"]))
trainNY <- subset(train,state="NY")
length(table(trainNY$location))
length(table(train$location))
trainNY <- train[train$state="NY",]
trainNY <- train[train$state == "NY",]
length(table(train$location))
length(table(trainNY$location))
library(ISLR)
summary(Hitters)
Hitters=na.omit(Hitters)
with(Hitters,sum(is.na(Salary)))
library(leaps)
regfit.full=regsubsets(Salary~.,data=Hitters)
summary(regfit.full)
install.packages("leaps")
library(leaps)
regfit.full=regsubsets(Salary~.,data=Hitters)
summary(regfit.full)
regfit.full=regsubsets(Salary~.,data=Hitters, nvmax=19)
reg.summary=summary(regfit.full)
names(reg.summary)
plot(reg.summary$cp,xlab="Number of Variables",ylab="Cp")
which.min(reg.summary$cp)
points(10,reg.summary$cp[10],pch=20,col="red")
plot(regfit.full,scale="Cp")
coef(regfit.full,10)
regfit.fwd=regsubsets(Salary~.,data=Hitters,nvmax=19,method="forward")
summary(regfit.fwd)
plot(regfit.fwd,scale="Cp")
dim(Hitters)
set.seed(1)
train=sample(seq(263),180,replace=FALSE)
train
regfit.fwd=regsubsets(Salary~.,data=Hitters[train,],nvmax=19,method="forward")
val.errors=rep(NA,19)
x.test=model.matrix(Salary~.,data=Hitters[-train,])# notice the -index!
for(i in 1:19){
coefi=coef(regfit.fwd,id=i)
pred=x.test[,names(coefi)]%*%coefi
val.errors[i]=mean((Hitters$Salary[-train]-pred)^2)
}
plot(sqrt(val.errors),ylab="Root MSE",ylim=c(300,400),pch=19,type="b")
points(sqrt(regfit.fwd$rss[-1]/180),col="blue",pch=19,type="b")
legend("topright",legend=c("Training","Validation"),col=c("blue","black"),pch=19)
predict.regsubsets=function(object,newdata,id,...){
form=as.formula(object$call[[2]])
mat=model.matrix(form,newdata)
coefi=coef(object,id=id)
mat[,names(coefi)]%*%coefi
}
set.seed(11)
folds=sample(rep(1:10,length=nrow(Hitters)))
folds
table(folds)
cv.errors=matrix(NA,10,19)
for(k in 1:10){
best.fit=regsubsets(Salary~.,data=Hitters[folds!=k,],nvmax=19,method="forward")
for(i in 1:19){
pred=predict(best.fit,Hitters[folds==k,],id=i)
cv.errors[k,i]=mean( (Hitters$Salary[folds==k]-pred)^2)
}
}
rmse.cv=sqrt(apply(cv.errors,2,mean))
plot(rmse.cv,pch=19,type="b")
library(glmnet)
x=model.matrix(Salary~.-1,data=Hitters)
y=Hitters$Salary
fit.ridge=glmnet(x,y,alpha=0)
plot(fit.ridge,xvar="lambda",label=TRUE)
cv.ridge=cv.glmnet(x,y,alpha=0)
plot(cv.ridge)
fit.lasso=glmnet(x,y)
plot(fit.lasso,xvar="lambda",label=TRUE)
cv.lasso=cv.glmnet(x,y)
plot(cv.lasso)
coef(cv.lasso)
lasso.tr=glmnet(x[train,],y[train])
lasso.tr
pred=predict(lasso.tr,x[-train,])
dim(pred)
rmse= sqrt(apply((y[-train]-pred)^2,2,mean))
plot(log(lasso.tr$lambda),rmse,type="b",xlab="Log(lambda)")
lam.best=lasso.tr$lambda[order(rmse)[1]]
lam.best
coef(lasso.tr,s=lam.best)
library("knitr", lib.loc="C:/Users/Anichini/Documents/R/win-library/3.0")
setwd("~/GitHub/Reproducible_1")
setwd("~/GitHub/Reproducible_1")
activity <- read.csv("activity.csv")
byDate <- tapply(activity$steps[!is.na(activity$steps)],
activity$date[!is.na(activity$steps)],sum)
byDate <- byDate[!is.na(byDate)]
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
weekday <- weekdays(as.Date(imputedActivity$date))
rawMean <- mean(byDate)
rawMedian <- median(byDate)
rawMean
rawMedian
byInterval <- as.numeric(tapply(activity$steps[!is.na(activity$steps)],
activity$interval[!is.na(activity$steps)],
mean))
intervals <- data.frame(as.numeric(rownames(table(activity$interval))))
intervals <- cbind(intervals,byInterval)
colnames(intervals) <- c("interval","steps")
par(mfrow = c(1,1))
plot(intervals$interval,intervals$steps, type = "l", xlab = "5-minute Interval",
ylab = "Steps", main = "Average Number of Steps Taken")
intervals[which(intervals$steps==max(intervals$steps)),]
TotalNAs <- length(activity$steps[!complete.cases(activity)])
imputedActivity <- complete(mice(activity))
require(mice)
imputedActivity <- complete(mice(activity))
byDate2 <- tapply(imputedActivity$steps,imputedActivity$date,sum)
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps")
meanImputed <- mean(byDate2)
medianImputed <- median(byDate2)
weekday <- weekdays(as.Date(imputedActivity$date))
imputedActivity$weekday <- rep("weekday",17568)
imputedActivity$weekday[weekday %in% c("Saturday","Sunday")] <- "weekend"
weekends <- subset(imputedActivity,weekday == "weekend")
weekdays <- subset(imputedActivity,weekday == "weekday")
weekendInterval <- as.numeric(tapply(weekends$steps, weekends$interval, mean))
weekendInterval <- cbind(data.frame(as.numeric(rownames(table(
activity$interval)))),weekendInterval)
colnames(weekendInterval) <- c("interval","steps")
weeksplit <- rbind(weekendInterval,weekdayInterval)
weekdayInterval <- as.numeric(tapply(weekdays$steps, weekdays$interval, mean))
weekdayInterval <- cbind(data.frame(as.numeric(rownames(table(
activity$interval)))),weekdayInterval)
colnames(weekdayInterval) <- c("interval","steps")
weeksplit <- rbind(weekendInterval,weekdayInterval)
require("lattice")
xyplot(steps~interval|type, data = weeksplit, type="l",
main="Avg. #Steps Taken",
xlab="Interval", ylab="Number of Steps",
layout=c(1,2))
imputedActivity$type <- rep("weekday",17568)
imputedActivity$type[weekday %in% c("Saturday","Sunday")] <- "weekend"
tapply(imputedActivity$steps,imputedActivity$type,mean)
weekends <- subset(imputedActivity,type == "weekend")
weekdays <- subset(imputedActivity,type == "weekday")
weekendInterval <- as.numeric(tapply(weekends$steps, weekends$interval, mean))
weekendInterval <- as.numeric(tapply(weekends$steps, weekends$interval, mean))
weekendInterval <- cbind(data.frame(as.numeric(rownames(table(activity$interval)))),weekendInterval)
colnames(weekendInterval) <- c("interval","steps")
weekendInterval$type <- rep("weekend",288)
str(weekendInterval)
weekendInterval$type <- rep("weekend",nrow(weekendInterval))
weekdayInterval <- as.numeric(tapply(weekdays$steps, weekdays$interval, mean))
weekdayInterval <- cbind(data.frame(as.numeric(rownames(table(activity$interval)))),weekdayInterval)
colnames(weekdayInterval) <- c("interval","steps")
weekdayInterval$type <- rep("weekday",nrow(weekdayInterval))
weeksplit <- rbind(weekendInterval,weekdayInterval)
require("lattice")
xyplot(steps~interval|type, data = weeksplit, type="l",
main="Avg. #Steps Taken",
xlab="Interval", ylab="Number of Steps",
layout=c(1,2))
intervals[which(intervals$steps==max(intervals$steps)),]
maxTime <- intervals[which(intervals$steps==max(intervals$steps)),][2]
maxTime <- intervals[which(intervals$steps==max(intervals$steps)),][1]
maxTime <- [intervals[which(intervals$steps==max(intervals$steps)),][1]]
maxTime <- intervals[which(intervals$steps==max(intervals$steps)),][[1]]
meanIncrease <- meanImputed - rawMean
medianIncrease <- medianImputed - rawMedian
rawMean <- round(mean(byDate),1)
meanImputed <- round(mean(byDate2),1)
meanIncrease <- meanImputed - rawMean
?round
meanIncrease <- round(meanImputed - rawMean,1)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", abline = rawMean)
abline(v = rawMean, col = "blue", lwd = 2)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
abline(v = rawMedian, col = "blue", lwd = 2, lty = 1)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
abline(v = rawMedian, col = "blue", lwd = 2, lty = 1)
?lty
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
abline(v = rawMedian, col = "green", lty = 3)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
abline(v = rawMean, col = "blue", lwd = 2)
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean, 20, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 1000, 20, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 3000, 20, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2500, 20, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps")
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2500, 26, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2500, 26, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2500, 29, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2500, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2400, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2000, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 32, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 31, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 30.5, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 29.5, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
abline(v = rawMedian, col = "green", lty = 3)
text(rawMedian - 5050, 27, paste("Median = ",rawMedian,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "blue", lwd = 2)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "blue")
abline(v = rawMedian, col = "green", lty = 3)
text(rawMedian - 3050, 27, paste("Median = ",rawMedian,sep=""), col = "green")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "black")
abline(v = rawMedian, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 3050, 27, paste("Median = ",rawMedian,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "black")
abline(v = rawMedian, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 3050, 30, paste("Median = ",rawMedian,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "black")
abline(v = rawMedian, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 2000, 30, paste("Median = ",rawMedian,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "black")
abline(v = rawMedian, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 2100, 30, paste("Median = ",rawMedian,sep=""), col = "blue")
hist(byDate,main = "Frequency of Steps Each Day", xlab = "#Steps", ylim = c(0,30))
abline(v = rawMean, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",rawMean,sep=""), col = "black")
abline(v = rawMedian, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 2250, 30, paste("Median = ",rawMedian,sep=""), col = "blue")
```
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps")
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2050, 30, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2050, 33, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2050, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2150, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2250, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2450, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2550, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2750, 34, paste("Mean = ",meanImputed,sep=""), col = "black")
byDate2 <- tapply(imputedActivity$steps,imputedActivity$date,sum)
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2750, 35, paste("Mean = ",meanImputed,sep=""), col = "black")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2700, 35, paste("Mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 2250, 35, paste("medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean + 2700, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian - 2250, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean - 4500, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian + 4250, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean - 3500, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian + 5000, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean - 3400, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian + 5000, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean - 3300, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian + 5000, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
hist(byDate2, main = "Frequency of Steps Each Day (NAs imputed)", xlab =
"#Steps", ylim = c(0, 35))
abline(v = meanImputed, col = "black", lwd = 1)
text(rawMean - 3200, 35, paste("Imputed mean = ",meanImputed,sep=""), col = "black")
abline(v = medianImputed, col = "blue", lwd = 2, lty = 3)
text(rawMedian + 5000, 35, paste("Imputed medianImputed = ",medianImputed,sep=""), col = "blue")
?int
?floor
floor(8.36,0)
floor(8.36)
maxHr <- floor(maxTime)
maxHr <- floor(maxTime/100)
maxMin <- (maxTime %% 100)
maxClock <- paste(paste(maxHr,":",sep=""),maxMin,sep="")
maxSteps <- intervals[which(intervals$steps==max(intervals$steps)),][[2]]
maxClock <- paste(paste(maxHr,":",sep=""),maxMin,sep="")
maxClock <- paste(maxHr,paste(":",maxMin,sep=""),sep="")
maxHr <- paste(floor(maxTime/100),":",sep="")
maxMin <- character(maxTime %% 100)
maxMin <- as.character(maxTime %% 100)
maxClock <- paste(maxHr,maxMin,sep="")
